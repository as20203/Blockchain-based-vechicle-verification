../bin/cryptogen generate --config=./crypto-config.yaml


export FABRIC_CFG_PATH=$PWD


../bin/configtxgen -profile VehicleRegistrationOrdererGenesis -channelID vehicle-sys-channel -outputBlock ./channel-artifacts/genesis.block

export CHANNEL_NAME=mychannel  && ../bin/configtxgen -profile VehicleRegistrationChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME

../bin/configtxgen -profile VehicleRegistrationChannel -outputAnchorPeersUpdate ./channel-artifacts/VehicleRegistrationMSPanchors.tx -channelID $CHANNEL_NAME -asOrg VehicleRegistrationMSP


../bin/configtxgen -profile VehicleRegistrationChannel -outputAnchorPeersUpdate ./channel-artifacts/NadraMSPanchors.tx -channelID $CHANNEL_NAME -asOrg NadraMSP




docker-compose -f docker-compose-cli.yaml -f docker-compose-couch.yaml -f docker-compose-ca.yaml up -d

docker exec -it cli bash

export CHANNEL_NAME=mychannel

peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

peer channel join -b mychannel.block


CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/nadra2.example.com/users/Admin@nadra2.example.com/msp CORE_PEER_ADDRESS=peer0.nadra2.example.com:9051 CORE_PEER_LOCALMSPID="Nadra2MSP" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/nadra2.example.com/peers/peer0.nadra2.example.com/tls/ca.crt peer channel join -b mychannel.block




peer channel update -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/Vehiclereg1MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/nadra2.example.com/users/Admin@nadra2.example.com/msp CORE_PEER_ADDRESS=peer0.nadra2.example.com:9051 CORE_PEER_LOCALMSPID="Nadra2MSP" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/nadra2.example.com/peers/peer0.nadra2.example.com/tls/ca.crt peer channel update -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/Nadra2MSP.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem


####FYP chaincode

####peer0.vehiclereg1.example.com
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Vehiclereg1.example.com/users/Admin@Vehiclereg1.example.com/msp
CORE_PEER_ADDRESS=peer0.vehiclereg1.example.com:7051
CORE_PEER_LOCALMSPID="Vehiclereg1MSP"
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Vehiclereg1.example.com/peers/peer0.Vehiclereg1.example.com/tls/ca.crt

peer chaincode install -n myfyp -v 1.0 -p "/opt/gopath/src/github.com/chaincode/fyp-contract-1" -l "node"



####peer1.vehiclereg1.example.com
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Vehiclereg1.example.com/users/Admin@Vehiclereg1.example.com/msp
CORE_PEER_ADDRESS=peer1.vehiclereg1.example.com:8051
CORE_PEER_LOCALMSPID="Vehiclereg1MSP"
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Vehiclereg1.example.com/peers/peer0.Vehiclereg1.example.com/tls/ca.crt

peer chaincode install -n myfyp -v 1.0 -p "/opt/gopath/src/github.com/chaincode/fyp-contract-1" -l "node"

####peer0.nadra2.example.com
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Nadra2.example.com/users/Admin@Nadra2.example.com/msp
CORE_PEER_ADDRESS=peer0.nadra2.example.com:9051
CORE_PEER_LOCALMSPID="Nadra2MSP"
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Nadra2.example.com/peers/peer0.Nadra2.example.com/tls/ca.crt

peer chaincode install -n myfyp -v 1.0 -p "/opt/gopath/src/github.com/chaincode/fyp-contract-1" -l "node"


####peer0.nadra2.example.com
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Nadra2.example.com/users/Admin@Nadra2.example.com/msp
CORE_PEER_ADDRESS=peer1.nadra2.example.com:10051
CORE_PEER_LOCALMSPID="Nadra2MSP"
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Nadra2.example.com/peers/peer0.Nadra2.example.com/tls/ca.crt

peer chaincode install -n myfyp -v 1.0 -p "/opt/gopath/src/github.com/chaincode/fyp-contract-1" -l "node"




##Instantiate on channel
peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n myfyp -v 1.0 -c '{"Args":[]}' -P "AND ('Vehiclereg1MSP.peer','Nadra2MSP.peer')"

##Upgrade  on channel
peer chaincode upgrade --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -o orderer.example.com:7050 -C mychannel -n myfyp -l "node" -v 2.1 -c '{"Args":[]}' -P "AND ('Vehiclereg1MSP.peer','Nadra2MSP.peer')"

heroku config:set WEB_CONCURRENCY=1


###stop all containers
docker container stop $(docker container ls -aq)


###Use in emergency
docker-compose -f docker-compose-cli.yaml -f docker-compose-couch.yaml -f docker-compose-ca.yaml down --volumes --remove-orphans



